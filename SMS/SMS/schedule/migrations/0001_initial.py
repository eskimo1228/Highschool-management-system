# Generated by Django 2.2.5 on 2020-02-23 11:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('DB', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('full_name', models.CharField(max_length=255, unique=True)),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('graded', models.BooleanField(default=True, help_text='Teachers can submit grades for this course')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('credits', models.DecimalField(blank=True, decimal_places=2, help_text='Credits effect gpa', max_digits=5, max_length=5, null=True)),
                ('last_grade_submission', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('1', 'Monday'), ('2', 'Tuesday'), ('3', 'Wednesday'), ('4', 'Thursday'), ('5', 'Friday'), ('6', 'Saturday'), ('7', 'Sunday')], max_length=1)),
            ],
            options={
                'ordering': ('day',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('order_rank', models.IntegerField(blank=True, help_text='Rank that courses will show up in reports', null=True)),
            ],
            options={
                'ordering': ('order_rank', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'ordering': ('-start_time',),
            },
        ),
        migrations.CreateModel(
            name='OmitYearGPA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DB.Student')),
                ('year', models.ForeignKey(help_text='Omit this year from gpa calculations and transcripts', on_delete=django.db.models.deletion.CASCADE, to='DB.AcademicYear')),
            ],
        ),
        migrations.CreateModel(
            name='OmitCourseGPA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.Course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DB.Student')),
            ],
        ),
        migrations.CreateModel(
            name='MarkingPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('active', models.BooleanField(default=False, help_text='Teachers may only enter grades for active marking periods. There may be more than one active marking period. ')),
                ('show_reports', models.BooleanField(default=True, help_text='If checked this marking period will show up on reports. ')),
                ('monday', models.BooleanField(default=True)),
                ('tuesday', models.BooleanField(default=True)),
                ('wednesday', models.BooleanField(default=True)),
                ('thursday', models.BooleanField(default=True)),
                ('friday', models.BooleanField(default=True)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
                ('school_days', models.IntegerField(blank=True, help_text='If set, this will be the number of days school is in session. If unset, the value is calculated by the days off.', null=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DB.AcademicYear')),
            ],
            options={
                'ordering': ('-start_date',),
                'unique_together': {('name', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='DaysOff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('marking_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.MarkingPeriod')),
            ],
        ),
        migrations.CreateModel(
            name='CourseMeet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('1', 'Monday'), ('2', 'Tuesday'), ('3', 'Wednesday'), ('4', 'Thursday'), ('5', 'Friday'), ('6', 'Saturday'), ('7', 'Sunday')], max_length=1)),
                ('class_name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='DB.ClassRoom')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.Course')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.Location')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.Period')),
            ],
        ),
        migrations.CreateModel(
            name='CourseAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_compulsory', models.BooleanField(default=False)),
                ('this_academic_year', models.BooleanField(default=True, help_text='if left un checked the course will only be offered in this current academic period')),
                ('class_allocated', models.ForeignKey(help_text='name of the class', on_delete=django.db.models.deletion.CASCADE, to='DB.ClassRoom')),
                ('course', models.ForeignKey(help_text='name of the subject or course', on_delete=django.db.models.deletion.CASCADE, to='schedule.Course')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schedule.Department'),
        ),
        migrations.CreateModel(
            name='AwardStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.Award')),
                ('marking_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.MarkingPeriod')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DB.Student')),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentGraduationCredits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credits', models.DecimalField(decimal_places=2, max_digits=5, unique=True)),
                ('class_year', models.ForeignKey(help_text='Also applies to subsequent years unless a more recent requirement exists.', on_delete=django.db.models.deletion.CASCADE, to='DB.AcademicYear')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.Department')),
            ],
            options={
                'unique_together': {('department', 'credits')},
            },
        ),
    ]
